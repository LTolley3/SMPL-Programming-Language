Grade Sheet for CS334S20 Final Project

Name: Lucas Tolley and Carter Melnick

[10/10] 1000-word tutorial or 5-10 minute video presentation
[ 1/1 ] Project has a name
[ 8/8 ] Project has a specification (and it builds)
[ 2/2 ] Parser is in a file called `ProjectParser.fs`
[ 2/2 ] Interpreter is in a file called `ProjectInterpreter.fs`
[ 2/2 ] `main` function is in a file called `Program.fs`
[10/10] Project compiles.
[10/10] Project runs.
[10/10] Language "does something."
[ 5/5 ] Docs explain what expected result will be.
[ 2/2 ] Implementation has test suite and it runs.
[ 5/5 ] There are >0 tests for the parser.
[ 5/5 ] There are >0 tests for the interpreter.
[ 5/5 ] Project can be run with dotnet.
[ 1/1 ] Specification has a title.
[ 1/1 ] Author name(s) is written at the top of the spec.
[ 2/2 ] Spec has Introduction section w/2+ paragraphs.
[ 2/2 ] Spec has Design Principles section w/1+ paragraphs.
[ 3/3 ] Spec has Examples section w/3+ examples.
[ 3/3 ] Instructions to run examples are provided.
[ 2/2 ] Spec has Language Concepts section w/1+ paragraphs.
[ 2/2 ] Spec has complete Formal Syntax section in BNF.
[ 2/2 ] Spec has Semantics section w/1 description per language element.
[ 1/1 ] Spec provides enough detail that 3rd party can write new program.
[ 0/1 ] Program shuts down without .NET exception on malformed programs.
  I see that if I supply malformed programs that your checker spots
  the problem, but it would be better not to throw an exception (i.e.,
  be a little friendlier).
[ 1/1 ] Final spec is committed to `final-submission` branch.
[ 1/1 ] Final language is committed to `final-submission` branch.
[ 1/1 ] Spec has Remaining Work section.

TOTAL: 99%

Nice work!
